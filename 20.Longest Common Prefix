Longest Common Prefix

Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

 

Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"

//sorting in vector of string is lexicographical order
//so first and last string sabse less smiliar honge 
//we will just compare yeh doo strings and isme se jo sabse common prefix hai voh le lenge

string longestCommonPrefix(vector<string>& s) {
        sort(s.begin() , s.end());
        //O(n log n * m) for the above sort function

        string s1 = s[0];
        string s2 = s[s.size() - 1];
        
        int index = 0;

        while(index<s1.size() && index<s2.size()){
            if(s1[index]==s2[index]){
                index++;
            }
            else  break;
        }

        return s2.substr(0,index);
    
    }


string longestCommonPrefix(vector<string>& strs) {
    if (strs.empty()) return "";

    string prefix = strs[0];

    for (int i = 1; i < strs.size(); ++i) {
        int j = 0;
        while (j < prefix.size() && j < strs[i].size() && prefix[j] == strs[i][j]) {
            ++j;
        }
        prefix = prefix.substr(0, j);
        if (prefix.empty()) return "";
    }

    return prefix;
}
